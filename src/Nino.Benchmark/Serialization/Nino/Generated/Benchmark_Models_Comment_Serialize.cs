/* this is generated by nino */
namespace Nino.Benchmark.Models
{
    public partial class Comment
    {
        public static Comment.SerializationHelper NinoSerializationHelper = new Comment.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.ISerializationHelper<Comment>
        {
            #region NINO_CODEGEN
            public void NinoWriteMembers(Comment value, Nino.Serialization.Writer writer)
            {
                writer.CompressAndWrite(value.comment_id);
                writer.CompressAndWrite(value.post_id);
                writer.Write(value.creation_date);
                writer.CompressAndWrite(value.score);
                writer.Write(value.edited);
                writer.Write(value.body);
                writer.Write(value.link);
                writer.Write(value.body_markdown);
                writer.Write(value.upvoted);
            }

            public void NinoWriteMembers(object val, Nino.Serialization.Writer writer)
            {
	            NinoWriteMembers((Comment)val, writer);
            }

            public Comment NinoReadMembers(Nino.Serialization.Reader reader)
            {
                Comment value = new Comment();
                value.comment_id =  (System.Int32)reader.DecompressAndReadNumber();
                value.post_id =  (System.Int32)reader.DecompressAndReadNumber();
                value.creation_date = reader.ReadDateTime();
                value.score =  (System.Int32)reader.DecompressAndReadNumber();
                value.edited = reader.ReadBool();
                value.body = reader.ReadString();
                value.link = reader.ReadString();
                value.body_markdown = reader.ReadString();
                value.upvoted = reader.ReadBool();
                return value;
            }

            object Nino.Serialization.ISerializationHelper.NinoReadMembers(Nino.Serialization.Reader reader)
            {
	            return NinoReadMembers(reader);
            }
            #endregion
        }
    }
}