/* this is generated by nino */
namespace Nino.Benchmark.Models
{
    public partial class NestedData
    {
        public static NestedData.SerializationHelper NinoSerializationHelper = new NestedData.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<NestedData>
        {
            #region NINO_CODEGEN
            public override void Serialize(NestedData value, Nino.Serialization.Writer writer)
            {
                writer.Write(value.Name);
                if(value.Ps != null)
                {
                    writer.CompressAndWrite(value.Ps.Length);
                    foreach (var entry in value.Ps)
                    {
                        Nino.Benchmark.Models.Data.NinoSerializationHelper.Serialize(entry, writer);
                    }
                }
                else
                {
                    writer.CompressAndWrite(0);
                }
            }

            public override Nino.Serialization.Box<NestedData> Deserialize(Nino.Serialization.Reader reader)
            {
                NestedData value = new NestedData();
                value.Name = reader.ReadString();
                value.Ps = new Nino.Benchmark.Models.Data[reader.ReadLength()];
                for(int i = 0, cnt = value.Ps.Length; i < cnt; i++)
                {
                    var value_Ps_i = Nino.Benchmark.Models.Data.NinoSerializationHelper.Deserialize(reader).RetrieveValueAndReturn();
                    value.Ps[i] = value_Ps_i;
                }
                var ret = Nino.Shared.IO.ObjectPool<Nino.Serialization.Box<Nino.Benchmark.Models.NestedData>>.Request();
                ret.Value = value;
                return ret;
            }
            #endregion
        }
    }
}