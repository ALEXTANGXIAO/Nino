/* this is generated by nino */
namespace Nino.Benchmark.Models
{
    public partial class AccessToken
    {
        public static AccessToken.SerializationHelper NinoSerializationHelper = new AccessToken.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<AccessToken>
        {
            #region NINO_CODEGEN
            public override void Serialize(AccessToken value, Nino.Serialization.Writer writer)
            {
                writer.Write(value.Token);
                writer.Write(value.ExpiresOnDate);
                writer.CompressAndWrite(value.AccountId);
                if(value.Scope != null)
                {
                    writer.CompressAndWrite(value.Scope.Count);
                    foreach (var entry in value.Scope)
                    {
                        writer.Write(entry);
                    }
                }
                else
                {
                    writer.CompressAndWrite(0);
                }
            }

            public override AccessToken Deserialize(Nino.Serialization.Reader reader)
            {
                AccessToken value = new AccessToken();
                value.Token = reader.ReadString();
                value.ExpiresOnDate = reader.ReadDateTime();
                value.AccountId =  (System.Int32)reader.DecompressAndReadNumber();
                value.Scope = new System.Collections.Generic.List<System.String>(reader.ReadLength());
                for(int i = 0, cnt = value.Scope.Capacity; i < cnt; i++)
                {
                    var value_Scope_i = reader.ReadString();
                    value.Scope.Add(value_Scope_i);
                }
                return value;
            }
            #endregion
        }
    }
}