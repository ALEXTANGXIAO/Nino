/* this is generated by nino */
namespace Nino.Benchmark.Models
{
    public partial class Answer
    {
        public static Answer.SerializationHelper NinoSerializationHelper = new Answer.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.ISerializationHelper<Answer>
        {
            #region NINO_CODEGEN
            public void NinoWriteMembers(Answer value, Nino.Serialization.Writer writer)
            {
                writer.CompressAndWrite(value.question_id);
                writer.CompressAndWrite(value.answer_id);
                writer.WriteCommonVal(typeof(System.DateTime), value.locked_date);
                writer.WriteCommonVal(typeof(System.DateTime), value.creation_date);
                writer.WriteCommonVal(typeof(System.DateTime), value.last_edit_date);
                writer.WriteCommonVal(typeof(System.DateTime), value.last_activity_date);
                writer.CompressAndWrite(value.score);
                writer.WriteCommonVal(typeof(System.DateTime), value.community_owned_date);
                writer.Write(value.is_accepted);
                writer.Write(value.body);
                writer.Write(value.title);
                writer.CompressAndWrite(value.up_vote_count);
                writer.CompressAndWrite(value.down_vote_count);
                if(value.comments != null)
                {
                    writer.CompressAndWrite(value.comments.Count);
                    foreach (var entry in value.comments)
                    {
                        Benchmark.Models.Comment.NinoSerializationHelper.NinoWriteMembers(entry, writer);
                    }
                }
                else
                {
                    writer.CompressAndWrite(0);
                }
                writer.Write(value.link);
                if(value.tags != null)
                {
                    writer.CompressAndWrite(value.tags.Count);
                    foreach (var entry in value.tags)
                    {
                        writer.Write(entry);
                    }
                }
                else
                {
                    writer.CompressAndWrite(0);
                }
                writer.Write(value.upvoted);
                writer.Write(value.downvoted);
                writer.Write(value.accepted);
                writer.CompressAndWrite(value.comment_count);
                writer.Write(value.body_markdown);
                writer.Write(value.share_link);
            }

            public void NinoWriteMembers(object val, Nino.Serialization.Writer writer)
            {
	            NinoWriteMembers((Answer)val, writer);
            }

            public Answer NinoReadMembers(Nino.Serialization.Reader reader)
            {
                Answer value = new Answer();
                value.question_id =  (System.Int32)reader.DecompressAndReadNumber();
                value.answer_id =  (System.Int32)reader.DecompressAndReadNumber();
                value.locked_date = (System.DateTime)reader.ReadCommonVal(typeof(System.DateTime));
                value.creation_date = (System.DateTime)reader.ReadCommonVal(typeof(System.DateTime));
                value.last_edit_date = (System.DateTime)reader.ReadCommonVal(typeof(System.DateTime));
                value.last_activity_date = (System.DateTime)reader.ReadCommonVal(typeof(System.DateTime));
                value.score =  (System.Int32)reader.DecompressAndReadNumber();
                value.community_owned_date = (System.DateTime)reader.ReadCommonVal(typeof(System.DateTime));
                value.is_accepted = reader.ReadBool();
                value.body = reader.ReadString();
                value.title = reader.ReadString();
                value.up_vote_count =  (System.Int32)reader.DecompressAndReadNumber();
                value.down_vote_count =  (System.Int32)reader.DecompressAndReadNumber();
                value.comments = new System.Collections.Generic.List<Benchmark.Models.Comment>(reader.ReadLength());
                for(int i = 0, cnt = value.comments.Capacity; i < cnt; i++)
                {
                    var value_comments_i = Benchmark.Models.Comment.NinoSerializationHelper.NinoReadMembers(reader);
                    value.comments.Add(value_comments_i);
                }
                value.link = reader.ReadString();
                value.tags = new System.Collections.Generic.List<System.String>(reader.ReadLength());
                for(int i = 0, cnt = value.tags.Capacity; i < cnt; i++)
                {
                    var value_tags_i = reader.ReadString();
                    value.tags.Add(value_tags_i);
                }
                value.upvoted = reader.ReadBool();
                value.downvoted = reader.ReadBool();
                value.accepted = reader.ReadBool();
                value.comment_count =  (System.Int32)reader.DecompressAndReadNumber();
                value.body_markdown = reader.ReadString();
                value.share_link = reader.ReadString();
                return value;
            }

            object Nino.Serialization.ISerializationHelper.NinoReadMembers(Nino.Serialization.Reader reader)
            {
	            return NinoReadMembers(reader);
            }
            #endregion
        }
    }
}